/* --- Keep your existing styles --- */
#root {
  max-width: 1280px;
  margin: 0 auto;
  padding: 2rem;
  text-align: center;

  /* Needed so the app layout can size to viewport height */
  height: 100%;
}

.logo {
  height: 6em;
  padding: 1.5em;
  will-change: filter;
  transition: filter 300ms;
}
.logo:hover {
  filter: drop-shadow(0 0 2em #646cffaa);
}
.logo.react:hover {
  filter: drop-shadow(0 0 2em #61dafbaa);
}

@keyframes logo-spin {
  from { transform: rotate(0deg); }
  to   { transform: rotate(360deg); }
}

@media (prefers-reduced-motion: no-preference) {
  a:nth-of-type(2) .logo {
    animation: logo-spin infinite 20s linear;
  }
}

.card {
  padding: 2em;
}

.read-the-docs {
  color: #888;
}

/* ====================================================================== */
/*                            NEW LAYOUT RULES                             */
/*  Make the overall app use the full viewport height and push scrolling   */
/*  into the left nav and the main content areas (desktop).                */
/* ====================================================================== */

html, body {
  height: 100%;
  margin: 0;               /* avoid unexpected page scroll gaps */
  padding: 0;
}

/* Set your topbar height once; adjust if your header is taller/shorter */
:root {
  --topbar-h: 56px;
}

/* The app wraps header + 2-column layout */
.app {
  min-height: 100%;
  display: flex;
  flex-direction: column;
}

/* If you have a .topbar element, this makes its height explicit.
   (Wonâ€™t override your existing styles except height/line-height) */
.topbar {
  height: var(--topbar-h);
  line-height: var(--topbar-h);
}

/* The layout area under the top bar fills the viewport height minus header.
   min-height:0 lets its children become scroll containers inside the grid. */
.layout {
  height: calc(100vh - var(--topbar-h));
  display: grid;
  grid-template-columns: 260px 1fr; /* adjust to your nav width if different */
  gap: 0;

  /* Critical for proper scrolling inside grid children */
  min-height: 0;

  /* Prevent double scrollbars around the whole layout */
  overflow: hidden;
}

/* Left navigation: independently scrollable when taller than viewport */
.nav {
  overflow-y: auto;
  min-height: 0;           /* critical inside CSS grid */
}

/* Main content: independently scrollable */
.content {
  overflow-y: auto;
  min-height: 0;           /* critical inside CSS grid */
  padding: 16px;           /* keep some breathing room around pages */
  box-sizing: border-box;
}

/* Mobile: collapse to single column; your existing nav overlay logic still applies */
@media (max-width: 768px) {
  .layout {
    grid-template-columns: 1fr;
  }
}
/* Smooth, independent scrolling on iOS too */
.nav { -webkit-overflow-scrolling: touch; }

/* Mobile overlay menu specifics */
@media (max-width: 768px) {
  .nav {
    position: fixed;                /* sit above content */
    top: var(--topbar-h);
    left: 0;
    bottom: 0;
    width: 80vw;                    /* or your preferred width */
    max-width: 320px;
    transform: translateX(-100%);   /* hidden by default */
    transition: transform .25s ease;
    overflow-y: auto;               /* independent scroll */
    max-height: calc(100vh - var(--topbar-h));
  }
  .nav.open { transform: translateX(0); }

  /* Dark backdrop; also prevents background scrolling */
  .scrim {
    position: fixed;
    inset: 0;
    background: rgba(0,0,0,.35);
  }

  /* Optional: stop content from scrolling while menu is open */
  .nav.open ~ .content { overflow: hidden; }
}

